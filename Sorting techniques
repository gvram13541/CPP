// QUICKSORT TECHNIQUE :-
// TIME COMPLEXITY : O(nlogn) BESTCASE, WORSTCASE O(N2)
// SPACE COMPLEXITY : O(n)

#include <bits/stdc++.h>
using namespace std;
int partiton(int arr[], int l, int r){
    int pivot = arr[r];
    int i = -1, j;
    for(j = 0; j < r; j++){
        if(arr[j] < pivot){
            i++;
            int temp = arr[j];
            arr[j] = arr[i];
            arr[i] = temp;
        }
    }
    int temp = arr[i+1];
    arr[i+1] = arr[j];
    arr[j] = temp;
    return i+1;
}
void quickSort(int arr[], int l, int r){
    if(l < r){
        int pi = partiton(arr, l, r);
        quickSort(arr, l, pi-1);
        quickSort(arr, pi+1, r);
    }
}

int main(){
    int arr[] = {6,5, 12, 10, 9, 1};
    quickSort(arr, 0, 5);
    for(int i = 0; i < 6; i++)
    cout << arr[i] << " ";
    return 0;
}
